import nodemailer from 'nodemailer';

// Create reusable transporter
const transporter = nodemailer.createTransport({
  host: process.env.SMTP_HOST,
  port: Number(process.env.SMTP_PORT),
  secure: process.env.SMTP_SECURE === 'true',
  auth: {
    user: process.env.SMTP_USER,
    pass: process.env.SMTP_PASSWORD,
  },
});

// Retry mechanism for email sending
async function sendEmailWithRetry(
  transporter: any,
  mailOptions: any,
  maxRetries: number = 3
) {
  for (let attempt = 1; attempt <= maxRetries; attempt++) {
    try {
      console.log(`\nüì§ Email sending attempt ${attempt}/${maxRetries}...`);
      const info = await transporter.sendMail(mailOptions);
      console.log(`‚úÖ Success on attempt ${attempt}`);
      return { success: true, info };
    } catch (error: any) {
      console.error(`‚ùå Attempt ${attempt} failed:`, error.message);
      
      if (attempt === maxRetries) {
        console.error('üö´ All retry attempts exhausted');
        throw error;
      }
      
      // –ñ–¥—ë–º –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π (—ç–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞)
      const delay = Math.min(1000 * Math.pow(2, attempt - 1), 5000);
      console.log(`‚è≥ Waiting ${delay}ms before retry...`);
      await new Promise(resolve => setTimeout(resolve, delay));
    }
  }
}

interface EmailOptions {
  to: string;
  subject: string;
  html: string;
  text?: string;
}

export async function sendEmail({ to, subject, html, text }: EmailOptions) {
  console.log('\n=== üìß EMAIL VERIFICATION SENDING ===');
  console.log('Timestamp:', new Date().toISOString());
  console.log('Recipient email:', to);
  console.log('Subject:', subject);
  console.log('HTML length:', html?.length || 0);
  console.log('Text length:', text?.length || 0);
  console.log('\nSMTP Configuration:');
  console.log('  Host:', process.env.SMTP_HOST);
  console.log('  Port:', process.env.SMTP_PORT);
  console.log('  User:', process.env.SMTP_USER);
  console.log('  From:', process.env.SMTP_FROM);
  console.log('  Password set:', process.env.SMTP_PASSWORD ? 'Yes ‚úì' : 'No ‚úó');
  console.log('  Password length:', process.env.SMTP_PASSWORD?.length || 0);
  console.log('  Secure:', process.env.SMTP_SECURE);

  try {
    console.log('\nüì§ Attempting to send email...');
    const startTime = Date.now();
    
    const mailOptions = {
      from: process.env.SMTP_FROM || '"–ú–µ—Ç–∞–ª–ª–í–µ–∫—Ç–æ—Ä" <noreply.vectorpro@gmail.com>',
      to,
      subject,
      html,
      text: text || html.replace(/<[^>]*>/g, ''), // Strip HTML for text version
    };
    
    const result = await sendEmailWithRetry(transporter, mailOptions, 3);
    
    const endTime = Date.now();
    const duration = endTime - startTime;
    
    console.log('\n‚úÖ EMAIL SENT SUCCESSFULLY!');
    console.log('Duration:', duration + 'ms');
    console.log('Message ID:', result?.info?.messageId);
    console.log('Response:', result?.info?.response);
    console.log('Accepted:', result?.info?.accepted);
    console.log('Rejected:', result?.info?.rejected);
    console.log('Pending:', result?.info?.pending);
    console.log('=== END EMAIL LOG ===\n');
    
    return { success: true, messageId: result?.info?.messageId };
    
  } catch (error: any) {
    console.error('\n‚ùå EMAIL SENDING FAILED!');
    console.error('Error Type:', error.constructor.name);
    console.error('Error Code:', error.code);
    console.error('Error Message:', error.message);
    console.error('Command:', error.command);
    console.error('Response:', error.response);
    console.error('Response Code:', error.responseCode);
    console.error('Stack:', error.stack);
    console.error('=== END EMAIL LOG ===\n');
    
    return { success: false, error };
  }
}

// Template for password reset email
export function getPasswordResetEmailTemplate(resetUrl: string, email: string) {
  const html = `
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <style>
        body {
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
          line-height: 1.6;
          color: #1d1d1f;
          background: #ffffff;
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .container {
          background: #ffffff;
          border: 1px solid #d2d2d7;
          border-radius: 12px;
          padding: 40px;
        }
        .header {
          text-align: center;
          margin-bottom: 30px;
        }
        .title {
          font-size: 28px;
          font-weight: 600;
          color: #1d1d1f;
          margin: 0 0 10px 0;
        }
        .subtitle {
          font-size: 16px;
          color: #6e6e73;
          margin: 0;
        }
        .content {
          margin: 30px 0;
        }
        .button {
          display: inline-block;
          padding: 12px 24px;
          background: #ffffff;
          color: #000000;
          text-decoration: none;
          border-radius: 8px;
          font-weight: 500;
          margin: 20px 0;
          border: 2px solid #000000;
        }
        .button:hover {
          background: #000000;
          color: #ffffff;
        }
        .link {
          word-break: break-all;
          color: #6e6e73;
          font-size: 14px;
        }
        .footer {
          margin-top: 40px;
          padding-top: 20px;
          border-top: 1px solid #d2d2d7;
          font-size: 14px;
          color: #6e6e73;
          text-align: center;
        }
        .warning {
          background: #f5f5f7;
          padding: 15px;
          border-radius: 8px;
          margin: 20px 0;
          font-size: 14px;
          color: #1d1d1f;
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <h1 class="title">–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è</h1>
          <p class="subtitle">–ú–µ—Ç–∞–ª–ª –í–µ–∫—Ç–æ—Ä</p>
        </div>
        
        <div class="content">
          <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ,</p>
          <p>–í—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞ <strong>${email}</strong></p>
          <p>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å:</p>
          
          <div style="text-align: center;">
            <a href="${resetUrl}" class="button">–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å</a>
          </div>
          
          <p>–ò–ª–∏ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä:</p>
          <p class="link">${resetUrl}</p>
          
          <div class="warning">
            <strong>‚è± –í–∞–∂–Ω–æ:</strong> –°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 —á–∞—Å–∞.
          </div>
          
          <p>–ï—Å–ª–∏ –≤—ã –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ.</p>
        </div>
        
        <div class="footer">
          <p>–° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>–ö–æ–º–∞–Ω–¥–∞ –ú–µ—Ç–∞–ª–ª –í–µ–∫—Ç–æ—Ä</p>
          <p style="font-size: 12px; margin-top: 20px;">
            –≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–∏—Å—å–º–æ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –Ω–µ–≥–æ.
          </p>
        </div>
      </div>
    </body>
    </html>
  `;

  const text = `
–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è - –ú–µ—Ç–∞–ª–ª –í–µ–∫—Ç–æ—Ä

–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ,

–í—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞ ${email}

–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è:
${resetUrl}

–°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 —á–∞—Å–∞.

–ï—Å–ª–∏ –≤—ã –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ.

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ –ú–µ—Ç–∞–ª–ª –í–µ–∫—Ç–æ—Ä
  `.trim();

  return { html, text };
}

// Email verification template
export function getEmailVerificationTemplate(verificationUrl: string, email: string) {
  const html = `
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <style>
        body {
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
          line-height: 1.6;
          color: #1d1d1f;
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .container {
          background: #ffffff;
          border: 1px solid #d2d2d7;
          border-radius: 12px;
          padding: 40px;
        }
        .header {
          text-align: center;
          margin-bottom: 30px;
        }
        .title {
          font-size: 28px;
          font-weight: 600;
          color: #1d1d1f;
          margin: 0 0 10px 0;
        }
        .subtitle {
          font-size: 16px;
          color: #6e6e73;
          margin: 0;
        }
        .content {
          margin: 30px 0;
        }
        .button {
          display: inline-block;
          padding: 12px 24px;
          background: #000000;
          color: #ffffff;
          text-decoration: none;
          border-radius: 8px;
          font-weight: 500;
          margin: 20px 0;
        }
        .button:hover {
          background: #1d1d1f;
        }
        .link {
          word-break: break-all;
          color: #6e6e73;
          font-size: 14px;
        }
        .footer {
          margin-top: 40px;
          padding-top: 20px;
          border-top: 1px solid #d2d2d7;
          font-size: 14px;
          color: #6e6e73;
          text-align: center;
        }
        .warning {
          background: #f5f5f7;
          padding: 15px;
          border-radius: 8px;
          margin: 20px 0;
          font-size: 14px;
          color: #1d1d1f;
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <h1 class="title">–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ email</h1>
          <p class="subtitle">–ú–µ—Ç–∞–ª–ª –í–µ–∫—Ç–æ—Ä</p>
        </div>
        
        <div class="content">
          <p>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ú–µ—Ç–∞–ª–ª –í–µ–∫—Ç–æ—Ä!</p>
          <p>–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å —Å email: <strong>${email}</strong></p>
          <p>–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à email:</p>
          
          <div style="text-align: center;">
            <a href="${verificationUrl}" class="button">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å email</a>
          </div>
          
          <p>–ò–ª–∏ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä:</p>
          <p class="link">${verificationUrl}</p>
          
          <div class="warning">
            <strong>‚è± –í–∞–∂–Ω–æ:</strong> –°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.
          </div>
          
          <p>–ï—Å–ª–∏ –≤—ã –Ω–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –Ω–∞ –ú–µ—Ç–∞–ª–ª –í–µ–∫—Ç–æ—Ä, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ.</p>
        </div>
        
        <div class="footer">
          <p>–° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>–ö–æ–º–∞–Ω–¥–∞ –ú–µ—Ç–∞–ª–ª –í–µ–∫—Ç–æ—Ä</p>
          <p style="font-size: 12px; margin-top: 20px;">
            –≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–∏—Å—å–º–æ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –Ω–µ–≥–æ.
          </p>
        </div>
      </div>
    </body>
    </html>
  `;

  const text = `
–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ email - –ú–µ—Ç–∞–ª–ª –í–µ–∫—Ç–æ—Ä

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ú–µ—Ç–∞–ª–ª –í–µ–∫—Ç–æ—Ä!

–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å —Å email: ${email}

–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à email:
${verificationUrl}

–°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.

–ï—Å–ª–∏ –≤—ã –Ω–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –Ω–∞ –ú–µ—Ç–∞–ª–ª –í–µ–∫—Ç–æ—Ä, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ.

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ –ú–µ—Ç–∞–ª–ª –í–µ–∫—Ç–æ—Ä
  `.trim();

  return { html, text };
}
